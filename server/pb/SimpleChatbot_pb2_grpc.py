# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import server.pb.SimpleChatbot_pb2 as SimpleChatbot__pb2


class SimpleChatBotServerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Chat = channel.unary_unary(
            '/simplechatbot.SimpleChatBotServer/Chat',
            request_serializer=SimpleChatbot__pb2.ChatRequest.SerializeToString,
            response_deserializer=SimpleChatbot__pb2.ChatReply.FromString,
        )


class SimpleChatBotServerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Chat(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimpleChatBotServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Chat': grpc.unary_unary_rpc_method_handler(
            servicer.Chat,
            request_deserializer=SimpleChatbot__pb2.ChatRequest.FromString,
            response_serializer=SimpleChatbot__pb2.ChatReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'simplechatbot.SimpleChatBotServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SimpleChatBotServer(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Chat(request,
             target,
             options=(),
             channel_credentials=None,
             call_credentials=None,
             compression=None,
             wait_for_ready=None,
             timeout=None,
             metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simplechatbot.SimpleChatBotServer/Chat',
                                             SimpleChatbot__pb2.ChatRequest.SerializeToString,
                                             SimpleChatbot__pb2.ChatReply.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)
